#summary DAS-scripting guide

== DAS-scripting guide ==

=== Script operators ===

_Script operators list:_
|| *operators*  || *description* || *parameters* || *example* ||
|| execute    || execute query via provider || node contents: query to execute || {{{<execute>SELECT "id", "name", "description" FROM "users"</execute>}}} ||
|| var        || declare or modify a variable || "name" - variable name<br/>_"value" - variable value (expression)_<br/>_"type"- variable type (!DataObject by default if no value defined)_ || *`example 1:`*<br/> {{{<var name="result" value="100" type="int" />}}}<br/><br/> *`example 2:`*<br/>{{{<var name="queryResult">}}}<br/>{{{  <execute>SELECT * FROM tableName</execute>}}}<br/>{{{</var>}}} ||
|| ifeq/ifneq || process conditional operator<br/> process content operators if expressions are equal(ifeq) or not equal(ifneq) || "expr1" - expression 1<br/>"expr2" - expression 2<br/> || {{{<ifneq expr1="${value}" expr2="" >}}}<br/>  {{{<execute>INSERT INTO values(name) VALUES('${value}')</execute>}}}<br/>{{{</ifneq>}}} ||
|| foreach    || iterate through elements || _"element" - child element to iterate_ || {{{<foreach element="$(identificators)">}}}<br/>{{{<execute>INSERT INTO users "id", "name", "description" VALUES('$nodeValue', 'user_$nodeValue', 'autogenerated user # $nodeValue')</execute>}}}<br/>{{{</foreach>}}} ||
|| return     || set return value and break script execution || "var" - variable name to return || {{{<return var="result" />}}} ||
|| log        || output evaluated message to axis2/c console || log text in subnode || {{{<log>a=${a}, b=${b}</log>}}} ||

`*` parameters marked _italic_ is optional
<br/>
<br/>

=== Evaluating expressions ===

`${variable_name}` or `$variable_name` - replace placeholder to variable value

`$(element.name)` - replace placeholder to given request's element value

*Example:*


request to the datasource is:

 {{{<Test><Info><Id>123</Id><Name>test name</Name></Info></Test>}}}

declared variable "a" as:

 {{{<var name="a" value="test" />}}}

expression:

{{{variable a="${a}" and Test info id = $(Info.Id), name="$(Info.Name)"}}}

evaluated expression will be:

{{{variable a="test" and Test info id = 123, name="test name"}}}



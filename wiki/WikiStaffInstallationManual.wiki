#summary Installation, configuration and test guide
#labels Phase-Deploy

= Introduction =

It's a little guide for compiling and installing Staff on Linux-like OS.

= Details =

== 0. Environment variables ==
Environment variables AXIS2C_HOME, STAFF_HOME must be set before compile:
{{{
AXIS2C_HOME=/usr/local/axis2c
STAFF_HOME=/usr/local/staff
}}}

You can append there variables into ~/.bashrc file, and relogin.

== 1. Compile and install dependencies ==

You need axis2/c-1.5.0 to be installed. Please, refer to http://ws.apache.org/axis2/c/download.cgi.

You can use following commands for downloading and installing axis2/c:
_Package curl-dev(libcurl-gnutls-dev or libcurl-openssl-dev) is required._
{{{
mkdir ~/devel/axis2c
cd ~/devel/axis2c
wget http://www.sai.msu.su/apache/ws/axis2/c/1_5_0/axis2c-src-1.5.0.tar.gz
tar zxvf axis2c-src-1.5.0.tar.gz
cd axis2c-src-1.5.0
./configure --enable-openssl=yes --enable-libcurl=yes --prefix=$AXIS2C_HOME --enable-libxml2
make && sudo -E make install
}}}

You need PostgreSQL to be installed. Please, refer to http://postgresql.org/download

== 2. Getting source code ==

Please refer to http://code.google.com/p/staff/source/checkout to read guide for getting source code from svn repository.


== 3. Compiling source code ==

=== 3.1 Compiling and installing rise ===
_Package binutils-dev is required._
Enter these commands to compile and install rise from checkout root (staff-read-only):

{{{
make -C rise && sudo make -C rise install
}}}

=== 3.2 Compiling and installing staff ===

Enter these commands to compile and install staff from working copy root (staff-read-only):

{{{
make -C staff && sudo -E make -C staff install
sudo ldconfig $STAFF_HOME/lib $AXIS2C_HOME/lib
}}}

Make sure that postgres is runnung and enter
{{{
sudo -u POSTGRES_USER make -C staff/core/security installdb
}}}
where POSTGRES_USER is Your postgres database user.

== 4. Configuring ==

=== 4.1 Configuring axis2 ===

{{{
sudo mcedit $AXIS2C_HOME/axis2.xml
}}}

after line:
{{{
<module ref="addressing"/>
}}}

add two lines:
{{{
<module ref="staff"/>
<module ref="staff_security"/>
}}}


=== 4.2 Configuring staff db connection ===

sudo mcedit $AXIS2C_HOME/modules/staff_security/module.xml

edit following parameters:
{{{
<parameter name="pgHost" locked="false">localhost</parameter>
<parameter name="pgPort" locked="false">5432</parameter>
<parameter name="pgUser" locked="false">POSTGRES_USER</parameter>
<parameter name="pgPassword" locked="false">POSTGRES_PASSWORD</parameter>
}}}

where POSTGRES_USER is your postgres database user, and POSTGRES_PASSWORD is user's password.


== 5. Start ==

=== 5.1 Start in normal mode ===

{{{
cd $AXIS2C_HOME/bin
./axis2_http_server
}}}

=== 5.2 Start in debug mode == 
{{{
cd $AXIS2C_HOME/bin
RISE_LOG_LEVEL=DEBUG3 RISE_EXCEPTION_STACKTRACING=1 ./axis2_http_server
}}}


== 6. Testing ==

=== 6.1 Basic test ===

Open your favorite web-browser and enter:

http://localhost:9090/axis2/services

Services "StaffService" and "staff.Login" must be running.

Sample services "calc.CalcService", "calc.SubService" must be running.


=== 6.2 Client interaction test ===

Start service Calculator
{{{
calculator_service
}}}

From another console start calculator client
{{{
calc_client
}}}
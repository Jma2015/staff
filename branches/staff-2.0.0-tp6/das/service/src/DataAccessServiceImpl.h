/*
 *  Copyright 2010 Utkin Dmitry
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

/*
 *  This file is part of the WSF Staff project.
 *  Please, visit http://code.google.com/p/staff for more information.
 */

// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Service Implementation

#ifndef _DataAccessServiceImpl_h_
#define _DataAccessServiceImpl_h_

#include <memory>
#include <rise/common/MutablePtr.h>
#include <staff/das/common/DataSource.h>
#include <staff/das/common/Provider.h>
#include "DataAccessService.h"

namespace staff
{
namespace das
{
  class DataSource;

  //! implementation of Data service
  class DataAccessServiceImpl: public DataAccessService
  {
  public:
    DataAccessServiceImpl();
    virtual ~DataAccessServiceImpl();
    virtual StringList GetProviders();
    virtual StringList GetDataSources();
    virtual void SetDataSource(const std::string& sDataSource);
    virtual void FreeDataSource();
    virtual DataObject GetInterface() const;
    virtual DataObject Invoke(const DataObject& rdoOperation);

  private:
    Providers m_stProviders;
    const DataSource* m_pDataSource;
  };
}
}


#endif // _DataAccessServiceImpl_h_

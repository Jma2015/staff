// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Client skeleton

#include <memory>
#include <rise/common/Log.h>
#include <staff/common/Exception.h>
#include <staff/client/ServiceFactory.h>
#include "Transport.h"

// callbacks

int main(int /*nArgs*/, const char* /*paszArgs*/[])
{
  try
  {
    std::auto_ptr< ::samples::abstract::Transport > pTransport(::staff::ServiceFactory::Inst().GetService< ::samples::abstract::Transport >());

    RISE_ASSERTS(pTransport.get(), "Cannot get client for service samples.abstract.Transport!");

    // Invoke Your service here:
    {
      ::samples::abstract::TransportInfo tTransportCar = pTransport->GetTransport(samples::abstract::TransportTypeCar);
      rise::LogInfo() << "Resulting type = " << tTransportCar.tpVehicle.GetType();
      const samples::abstract::Car& rCar = dynamic_cast<const samples::abstract::Car&>(*tTransportCar.tpVehicle);
      rise::LogInfo() << "Get car. model = " << rCar.sModel;
    }

    {
      ::samples::abstract::TransportInfo tTransportPlane = pTransport->GetTransport(samples::abstract::TransportTypePlane);
      rise::LogInfo() << "Resulting type = " << tTransportPlane.tpVehicle.GetType();
      const samples::abstract::Plane& rPlane = dynamic_cast<const samples::abstract::Plane&>(*tTransportPlane.tpVehicle);
      rise::LogInfo() << "Get Plane. number = " << rPlane.sSerialNumber;
    }

    {
      staff::Abstract<samples::abstract::Vehicle> tpReq(new samples::abstract::Plane);
      samples::abstract::Plane& rPlaneReq = static_cast<samples::abstract::Plane&>(*tpReq);
      rPlaneReq.sSerialNumber = "1111";

      staff::Abstract<samples::abstract::Vehicle> tPlaneResult = pTransport->Echo(tpReq);
      const samples::abstract::Plane& rPlaneRes = dynamic_cast<const samples::abstract::Plane&>(*tPlaneResult);
      rise::LogInfo() << "echo. number = " << rPlaneRes.sSerialNumber;
    }
  }
  RISE_CATCH_ALL

  return 0;
}


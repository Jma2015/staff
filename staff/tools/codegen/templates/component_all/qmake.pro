# This file generated by staff_codegen
# For more information please visit: http://code.google.com/p/staff/

QT          += core
QT          -= gui

TARGET       = $($sProjectName)
CONFIG      += console
CONFIG      -= app_bundle

TEMPLATE     = lib

COMPONENT    = $(Project.Interfaces.Interface.Namespace.!dot||Project.Interfaces.Interface.Name.!tolower.!dot)

STAFF_HOME   = $\$(STAFF_HOME)

!isEmpty (STAFF_HOME) {
  INCLUDEPATH    += $$STAFF_HOME/include
  LIBS           += -L$$STAFF_HOME/lib
  STAFF_CODEGEN   = $$STAFF_HOME/bin/staff_codegen
  INSTALL_PATH    = $$STAFF_HOME/components/$$COMPONENT
} else {
  STAFF_CODEGEN   = staff_codegen
  INSTALL_PATH    = /usr/lib/staff/components/$$COMPONENT
}

#ifeq($($c++11),true)
QMAKE_CXXFLAGS += -std=gnu++0x
#ifeqend

LIBS        += -lstaffutils -lstaffxml -lstaffcommon -lstaffcomponent

#var nLastInterface $(Project.Interfaces.$Count)
#var nLastInterface $($nLastInterface.!dec)

STAFF_INTERFACES = \\

#foreach $(Project.Interfaces)
    $($SRCDIR)$(Interface.Name).h\
#ifneq($(Interface.$Num),$($nLastInterface))
    \\

#ifeqend
#end


SOURCES     += \\

#foreach $(Project.Interfaces)
    $($SRCDIR)$(Interface.Name)Impl.cpp\
#ifneq($(Interface.$Num),$($nLastInterface))
    \\

#ifeqend
#end


HEADERS     += \\

#foreach $(Project.Interfaces)
    $($SRCDIR)$(Interface.Name).h \\

    $($SRCDIR)$(Interface.Name)Impl.h\
#ifneq($(Interface.$Num),$($nLastInterface))
    \\

#ifeqend
#end


staff_service_wrapper_decl.name = staff service wrapper header
staff_service_wrapper_decl.input = STAFF_INTERFACES
staff_service_wrapper_decl.output = ${QMAKE_FILE_PATH}/${QMAKE_FILE_BASE}Wrapper.h
staff_service_wrapper_decl.commands = $$STAFF_CODEGEN -tcomponent -c${QMAKE_FILE_PATH} ${QMAKE_FILE_BASE}.h\
#ifeq($($c++11),true)
 -dc++11
#ifeqend
staff_service_wrapper_decl.variable_out = GENERATED_FILES
QMAKE_EXTRA_COMPILERS += staff_service_wrapper_decl

staff_service_wrapper_impl.name = staff service wrapper wrapper implementation
staff_service_wrapper_impl.input = STAFF_INTERFACES
staff_service_wrapper_impl.output = ${QMAKE_FILE_PATH}/${QMAKE_FILE_BASE}Wrapper.cpp
staff_service_wrapper_impl.depends = ${QMAKE_FILE_PATH}/${QMAKE_FILE_BASE}Wrapper.h ${QMAKE_FILE_PATH}/${QMAKE_FILE_BASE}.h
staff_service_wrapper_impl.commands = $$escape_expand("\\n")
staff_service_wrapper_impl.variable_out = GENERATED_SOURCES
QMAKE_EXTRA_COMPILERS += staff_service_wrapper_impl

staff_component_decl.name = staff service wrapper header
staff_component_decl.input = STAFF_INTERFACES
staff_component_decl.output = ${QMAKE_FILE_PATH}/ComponentImpl.h
staff_component_decl.commands = $$escape_expand("\\n")
staff_component_decl.variable_out = GENERATED_FILES
QMAKE_EXTRA_COMPILERS += staff_component_decl

staff_component_impl.name = staff service wrapper wrapper implementation
staff_component_impl.input = STAFF_INTERFACES
staff_component_impl.output = ${QMAKE_FILE_PATH}/ComponentImpl.cpp
staff_component_impl.depends = ${QMAKE_FILE_PATH}/${QMAKE_FILE_BASE}.h ${QMAKE_FILE_PATH}/${QMAKE_FILE_BASE}Wrapper.h ${QMAKE_FILE_PATH}/ComponentImpl.h
staff_component_impl.commands = $$escape_expand("\\n")
staff_component_impl.variable_out = GENERATED_SOURCES
QMAKE_EXTRA_COMPILERS += staff_component_impl

target.path = $$INSTALL_PATH

wsdls.files = \\

#ifeq($($bFromInterface),)
#foreach $(Project.Interfaces)
    $(Interface.FileName)\
#ifneq($(Interface.$Num),$($nLastInterface))
    \\

#ifeqend
#end

#ifeqend
wsdls.path = $$INSTALL_PATH

INSTALLS += target wsdls



#ifeq($($SRCDIR),)
#var SRCDIR src/
#ifeqend

#ifneq($(Project.Interfaces.Interface.FileName.!depostfix/.h/.!depostfix/.H/),$(Project.Interfaces.Interface.FileName))
#var bFromInterface 1
#ifeqend


#mkdir $($SRCDIR)

// generate Makefile
#fileopen Makefile
#cginclude "Makefile"
#fileclose

#ifneq($(Project.Name),Project1)
#var sProjectName $(Project.Name)
#else
#var sProjectName $(Project.Interfaces.Interface.NsName.!mangle)_service
#ifeqend

// generate vcproject and cmd scripts
#fileopen $($sProjectName).vcproj
#cginclude "service.vcproj"
#fileclose
#fileopen codegen.cmd
#cginclude "codegen.cmd"
#fileclose
#fileopen install.cmd
#cginclude "install.cmd"
#fileclose


// generate interface
#ifeq($($bFromInterface),)
#foreach $(Project.Interfaces)
#fileopen $($SRCDIR)$(Interface.Name).h
#cginclude <interface/Interface.h>
#fileclose
#end
#ifeqend


// generate service skeleton
// do not generate implementation for types-only headers
#foreach $(Project.Interfaces)
#ifneq($(Interface.Classes.$Count),0)
#fileopen $($SRCDIR)$(Interface.FilePath)$(Interface.Name)Impl.h
#cginclude <serviceimpl/ServiceImpl.h>
#fileclose
#fileopen $($SRCDIR)$(Interface.FilePath)$(Interface.Name)Impl.cpp
#cginclude <serviceimpl/ServiceImpl.cpp>
#fileclose
#ifeqend
#end


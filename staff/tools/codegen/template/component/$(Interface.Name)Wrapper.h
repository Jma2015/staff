// This file generated by staff_codegen
// DO NOT EDIT

#ifndef _$(Interface.Name)Wrapper_h_
#define _$(Interface.Name)Wrapper_h_

#include <staff/component/Service.h>

#foreach $(Interface.Classes)
$(Class.OpeningNs)
  class $(Class.Name)Impl;

  //! класс обертки для сервиса $(Class.ServiceName)
  class $(Class.Name)Wrapper: public staff::CService
  {
  public:
    //!         конструктор по умолчанию
    $(Class.Name)Wrapper();

    //!         конструктор
    /*! \param  pComponent - компонент, к которому принадлежит сервис
    */
    $(Class.Name)Wrapper(staff::CComponent* pComponent);

    //!         деструктор
    virtual ~$(Class.Name)Wrapper();

    //!         получить имя сервиса
    /*! \return имя сервиса
    */
    const rise::CString& GetName() const;

    //!         получить описание сервиса
    /*! \return описание сервиса
    */
    const rise::CString& GetDescr() const;
    
    //!         получить описание операций
    /*! \return описание операций
    */
    virtual staff::CDataObject GetOperations() const;

    //!         получить описание сервиса
    /*! \return описание сервиса
    */
    virtual staff::CDataObject GetServiceDescription() const;
    
    //!         вызвать операцию сервиса
    /*! \param  rOperation - операция
        */
    void Invoke(staff::COperation& rOperation, const rise::CString& sID);

    //!         получить связанный с сервисом компонент
    /*! \return связанный с сервисом компонент
    */
    const staff::CComponent* GetComponent() const;

    //!         получить связанный с сервисом компонент
    /*! \return связанный с сервисом компонент
    */
    staff::CComponent* GetComponent();

    //!         получить указатель на реализацию сервиса(только для локальных сервисов)
    /*! \param  sID - идентификатор сервиса в группе
        \return указатель на реализацию сервиса
        */
    void* GetImpl(const rise::CString& sID);

  protected:
    $(Class.Name)Impl& ServiceImpl(const rise::CString& sID);
  
  private:
    class $(Class.Name)WrapperImpl;
    $(Class.Name)WrapperImpl* m_pImpl;
  };
$(Class.EndingNs)

#end
#endif // _$(Interface.Name)Wrapper_h_

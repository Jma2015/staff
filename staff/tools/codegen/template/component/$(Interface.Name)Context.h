// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// DO NOT EDIT

#ifndef _$(Interface.Name)Context_h_
#define _$(Interface.Name)Context_h_

#include <rise/string/String.h>
#include <rise/common/containertypes.h>

#foreach $(Interface.Classes)
$(Class.OpeningNs)
  class $(Class.Name)Impl;
  
  //!  $(Class.Name) Service context
  class $(Class.Name)Context
  {
  public:
    //!         get context instance
    /*! \return context instance
        */
    static $(Class.Name)Context& GetContext();

    //!         get service implementation(only for local)
    /*! \param  sID - service session id
        \return pointer to service implementation
        */
    $(Class.Name)Impl* GetServiceImpl(const rise::CString& sID);

    //!         get service session id
    /*! \param  pImpl - service implementation
        \return service session id
        */
    const rise::CString& GetServiceID(const $(Class.Name)Impl* pImpl) const;

    //!         get services ids
    /*! \return service ids
        */
    rise::CStringList GetServiceIds() const;

  protected:
    $(Class.Name)Context();
    ~$(Class.Name)Context();

  private:
    class $(Class.Name)ContextImpl;
    $(Class.Name)ContextImpl* m_pImpl;
    static $(Class.Name)Context* m_pInst;
  };
$(Class.EndingNs)

#end
#endif // _$(Interface.Name)Context_h_

/*
 *  Copyright 2009 Utkin Dmitry
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
/* 
 *  This file is part of the WSF Staff project.
 *  Please, visit http://code.google.com/p/staff for more information.
 */

// This file generated by staff_codegen
// DO NOT EDIT

#ifndef _$(Interface.Name)Context_h_
#define _$(Interface.Name)Context_h_

#include <rise/string/String.h>

#foreach $(Interface.Classes)
$(Class.OpeningNs)
  class $(Class.Name)Impl;
  
  //!  контекст сервиса $(Class.Name)
  class $(Class.Name)Context
  {
  public:
    //!
    static $(Class.Name)Context& GetContext();

    //!         получить указатель на реализацию сервиса(только для локальных сервисов)
    /*! \param  sID - идентификатор сервиса в группе
        \return указатель на реализацию сервиса
        */
    $(Class.Name)Impl* GetServiceImpl(const rise::CString& sID);

    //!         получить идентификатор сервиса в группе по реализации
    /*! \param  pImpl - реализация
        \return идентификатор сервиса группы
        */
    const rise::CString& GetServiceID(const $(Class.Name)Impl* pImpl) const;

  protected:
    //!        защищенный конструктор
    $(Class.Name)Context();
    
    //!        защищенный деструктор
    ~$(Class.Name)Context();

  private:
    class $(Class.Name)ContextImpl;
    $(Class.Name)ContextImpl* m_pImpl;
    static $(Class.Name)Context* m_pInst;
  };
$(Class.EndingNs)

#end
#endif // _$(Interface.Name)Context_h_

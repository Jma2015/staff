// This file generated by staff_codegen
// Client skeleton

#include <stdio.h>
#include <time.h>
#include <iostream>
#include <rise/threading/SharedPtr.h>
#include <rise/string/String.h>
#include <rise/common/Log.h>
#include <rise/common/ExceptionTemplate.h>
#include <rise/common/console.h>
#include <staff/common/Exception.h>
#include "ServiceFactory.h"
#include "CalcService.h"

int main(int nArgs, const char* paszArgs[])
{
  try
  {
    {
      // use anonymous account
      rise::CSharedPtr< ::samples::calc::CCalcService > pCalcService = 
        CServiceFactory::Inst().GetService< ::samples::calc::CCalcService >();

      RISE_ASSERTES(pCalcService != NULL, rise::CLogicNoItemException, "Cannot get client for service calc.CalcService!");

      // Invoke Your service here:
      rise::LogInfo() << "1 + 2 = " << pCalcService->Add(1, 2);
      rise::LogInfo() << "3 - 1 = " << pCalcService->Sub(3, 1);
      
      rise::LogInfo() << "Saved service mem: " << pCalcService->GetMem();

      srand(static_cast<unsigned int>(time(NULL)));
      int nNewMem = rand() % 100;

      rise::LogInfo() << "Setting mem: " << nNewMem;
      pCalcService->SetMem(nNewMem);
      rise::LogInfo() << pCalcService->GetMem();
      rise::LogInfo() << "Service mem: " << pCalcService->GetMem();
    }
  }
  catch(const staff::CRemoteException& rEx)
  {
    rise::LogError() << rEx.GetDescr();
  }
  RISE_CATCH_ALL
  
  rise::LogNotice() << "\n\n[Press Any Key...]";
  getchar();

  return 0;
}

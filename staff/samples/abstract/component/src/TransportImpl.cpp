// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Service Implementation

#include <staff/utils/tostring.h>
#include <staff/common/Exception.h>
#include "TransportImpl.h"

namespace samples
{
namespace abstract
{

TransportImpl::TransportImpl()
{
}

TransportImpl::~TransportImpl()
{
}

void TransportImpl::OnCreate()
{
  // this function is called when service instance is created and registered
}

void TransportImpl::OnDestroy()
{
  // this function is called immediately before service instance destruction
}

TransportInfo TransportImpl::GetTransport(TransportType eTransport)
{
  TransportInfo tResult;

  if (eTransport == TransportTypeCar)
  {
    tResult.tpVehicle = new Car;
    Car& rCar = static_cast<Car&>(*tResult.tpVehicle);
    rCar.sModel = "cabriolet";
  }
  else
  if (eTransport == TransportTypePlane)
  {
    tResult.tpVehicle = new Plane;
    Plane& rPlane = static_cast<Plane&>(*tResult.tpVehicle);
    rPlane.sSerialNumber = "012345";
  }
  else
  {
    RISE_THROWS(staff::RemoteException, "Invalid transport: " + staff::ToString(eTransport));
  }

  return tResult;  // result
}

staff::Abstract<Vehicle> TransportImpl::Echo(const staff::Abstract<Vehicle>& rtpVehicle)
{
  return rtpVehicle;
}

}
}


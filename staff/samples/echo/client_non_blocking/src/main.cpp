// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Client skeleton

#include <memory>
#include <rise/common/Log.h>
#include <rise/threading/Thread.h>
#include <staff/common/DataObject.h>
#include <staff/client/ICallback.h>
#include <staff/common/Exception.h>
#include <staff/client/ServiceFactory.h>
#include "Echo.h"

// callbacks
// callback for Echo::EchoString
class EchoEchoStringCallback: public staff::ICallback< const std::string& >
{
public:
  virtual void OnComplete(const std::string& tResult)
  {
    // process result here
    rise::LogInfo() << "EchoString(asynch) result: " << tResult;
  }

  void OnFault(const staff::CDataObject& rFault)
  {
    // process error here
    rise::LogError() << rFault.ToString();
  }
};



int main(int nArgs, const char* paszArgs[])
{
  try
  {
    std::auto_ptr< ::samples::Echo > pEcho(::staff::CServiceFactory::Inst().GetService< ::samples::Echo >());

    RISE_ASSERTES(pEcho.get(), rise::CLogicNoItemException, "Cannot get client for service samples.Echo!");

    // Invoke Your service here:

     EchoEchoStringCallback tEchoEchoStringCallback;
     pEcho->EchoString("test", tEchoEchoStringCallback);
     
     bool b = tEchoEchoStringCallback.IsCompleted();
     rise::LogInfo() << b;

    // Wait for asynch call is completed
    // Please note, that you cannot call any operation of this client
    // until this asynchronous request is completed.
    // To call operation while request is processing, please use another copy of client.
    while (!tEchoEchoStringCallback.IsCompleted())
    {
      rise::threading::CThread::Sleep(1000);
    }

  }
  catch(const staff::CRemoteException& rEx)
  {
    rise::LogError() << rEx.GetDescr();
  }
  RISE_CATCH_ALL

  return 0;
}


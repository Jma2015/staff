// This file generated by staff_codegen
// DO NOT EDIT

#include <memory>
#foreach $(Project.Interfaces)
#include "$(Interface.Name)Proxy.h"
#end
#include "ServiceFactory.h"

void* CServiceFactory::AllocateClient( const rise::CString& sClientType, const rise::CString& sSessionId, const rise::CString& sServiceName, const rise::CString& sHostName, const rise::CString& sHostPort )
{
#foreach $(Project.Interfaces)
#foreach $(Interface.Classes)
  if (sClientType == typeid($(Class.NsName)).name())
  {
    std::auto_ptr< $(Class.NsName)Proxy > pRet(new $(Class.NsName)Proxy);
    pRet->Init(sSessionId, sServiceName == "" ? "$(Class.ServiceNsName)" : sServiceName, sHostName, sHostPort);
    return pRet.release();
  } else
#end
#end
  return NULL;
}

CServiceFactory& CServiceFactory::Inst()
{
  if (m_pInst == NULL)
  {
    m_pInst = new CServiceFactory;
  }

  return *m_pInst;
}

CServiceFactory::CServiceFactory()
{
}

CServiceFactory* CServiceFactory::m_pInst = NULL;

// This file generated by staff_codegen
// DO NOT EDIT
namespace('staff');

///////////////////////////////////////////////////////////////////////////////////////////////////////
// struct serializators

///////////////////////////////////////////////////////////////////////////////////////////////////////
// struct deserializators

//-----------------------------------------------------------------------------------------------------

///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef serializators

///////////////////////////////////////////////////////////////////////////////////////////////////////
// typedef deserializators

//-----------------------------------------------------------------------------------------------------

///////////////////////////////////////////////////////////////////////////////////
// class: Login

staff.Login = Class.create();
staff.Login.tClient = null;
staff.Login.prototype = 
{
  initialize: function(sServiceName, sHostName, sHostPort)
  {
    if(sServiceName == null)
      sServiceName = 'staff.Login';
    this.tClient = new staff.Client(sServiceName, sHostName, sHostPort);
  },
  
  SetID: function(sID)
  {
    this.tClient.SetID(sID);
  },

  Login: function(sUserName, sPassword, pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('Login', this.tClient.GetServiceUri());
    
    tOperation.AddParameter('sUserName', sUserName);
    tOperation.AddParameter('sPassword', sPassword);
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation.ResultElement().firstChild.nodeValue, tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);

      return tOperation.ResultElement().firstChild.nodeValue;
    }
  },

  OpenExtraSession: function(pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('OpenExtraSession', this.tClient.GetServiceUri());
    
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation.ResultElement().firstChild.nodeValue, tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);

      return tOperation.ResultElement().firstChild.nodeValue;
    }
  },

  Logout: function(pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('Logout', this.tClient.GetServiceUri());
    
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);
    }
  },

  KeepAliveSession: function(pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('KeepAliveSession', this.tClient.GetServiceUri());
    
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);
    }
  },

  ValidateSession: function(pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('ValidateSession', this.tClient.GetServiceUri());
    
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation.ResultElement().firstChild.nodeValue, tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);

      return tOperation.ResultElement().firstChild.nodeValue;
    }
  },

  GetUserName: function(pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('GetUserName', this.tClient.GetServiceUri());
    
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation.ResultElement().firstChild.nodeValue, tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);

      return tOperation.ResultElement().firstChild.nodeValue;
    }
  },

  GetSessionExpiration: function(pOnComplete, pOnError)
  {
    var tOperation = new staff.Operation('GetSessionExpiration', this.tClient.GetServiceUri());
    
    if(typeof pOnComplete == 'function')
    { // make async call
      this.tClient.InvokeOperation(tOperation,
        function(tOperation)
        {
          pOnComplete(tOperation.ResultElement().firstChild.nodeValue, tOperation);
        },
        pOnError
      );
    }
    else
    {
      this.tClient.InvokeOperation(tOperation);

      return tOperation.ResultElement().firstChild.nodeValue;
    }
  }
}


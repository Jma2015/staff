# environment file for make

ifeq ($(MAKEFILE_ENV_INCLUDED),)

PLATFORM := $(shell uname -m)
ifeq ($(shell uname -o 2>/dev/null),Msys)
  OS := MINGW
else
  OS := $(shell uname -s)
endif

TOPDIR := $(realpath $(dir $(lastword $(MAKEFILE_LIST))))/

STAFF_HOME ?= /usr/local/lib/staff
include $(TOPDIR)VERSION
VERSION = $(LIBRARY_VERSION)
VERSION_MAJOR := $(firstword $(subst .,$(empty) $(empty),$(VERSION)))
REVISION := $(shell LANG=C svn info --non-interactive | sed -n '/^Revision:/s/.*:[ \t]//p')
VERSION_FULL := $(VERSION)-r$(REVISION)

SRCDIR = src/
OBJDIR = obj/$(PLATFORM)/
OUTDIR = out/$(PLATFORM)/
BINDIR = bin/
LIBDIR = lib/

COMPILER_FLAGS =
LINKER_FLAGS =

ifeq ($(PLATFORM),x86_64)
  COMPILER_FLAGS += -D_M_X64
endif

ifneq ($(DEBUG),)
  COMPILER_FLAGS += -D_DEBUG -g -O0
  LINKER_FLAGS += -g -O0
endif

COMPILER_WARNING_FLAGS = -Wall -W -pedantic -Wno-long-long
COMPILER_FLAGS += -DOS_$(OS)=1 -D_REENTRANT $(COMPILER_WARNING_FLAGS)

ifeq ($(OS),Linux)
  LINUX_VERSION := $(shell find /etc/ -maxdepth 1 -regex '.*[-_]version' -printf '%f\n' | sed -n '1{s/\([^-_]*\).*/\1/g;s/[^a-zA-Z0-9_]/_/g;p}')
  LINUX_RELEASE := $(shell find /etc/ -maxdepth 1 -regex '.*[-_]release' -printf '%f\n' | sed -n '1{s/\([^-_]*\).*/\1/g;s/[^a-zA-Z0-9_]/_/g;p}')
ifneq ($(LINUX_VERSION),)
  COMPILER_FLAGS += -DLINUX_VERSION_$(LINUX_VERSION)=1
endif
ifneq ($(LINUX_RELEASE),)
  COMPILER_FLAGS += -DLINUX_RELEASE_$(LINUX_RELEASE)=1
endif
endif

VPATH = $(SRCDIR)

CFLAGS += $(COMPILER_FLAGS)
LFLAGS += $(LINKER_FLAGS)
CXXFLAGS += $(COMPILER_FLAGS)
LDFLAGS += $(LINKER_FLAGS)

ifneq ($(OS),MINGW)
CXXFLAGS += -fPIC
LDFLAGS += -fPIC
CFLAGS += -fPIC
LFLAGS += -fPIC
LN = ln -nsf
else
LN = @true
endif

ECHO := echo$(shell test -z "$$(echo -e)" && echo ' -e ')

ifneq ($(VERSION),)
  DVERSION = .$(VERSION)
  DVERSIONM = .$(VERSION_MAJOR)
endif

ifeq ($(OS),Darwin)
  LIBPREFIX = lib
  LIBEXT = .dylib
  LIBVEREXT = $(DVERSION)$(LIBEXT)
  LIBVEMREXT = $(DVERSIONM)$(LIBEXT)
  LDLIB = -dynamiclib -Wl,-dylib_install_name -Wl,
  LIBRARY_PATH_ENV = DYLD_LIBRARY_PATH
else
ifeq ($(OS),MINGW)
  LIBPREFIX = 
  LIBEXT = .dll
  LIBVEREXT = $(LIBEXT)
  LIBVERMEXT = $(LIBEXT)
  LDLIB = -shared -Wl,-soname,
  CC = gcc
  LIBRARY_PATH_ENV = PATH
  AXIS2C_HOME := $(subst :,,$(subst \,/,/$(AXIS2C_HOME)))
  STAFF_HOME := $(subst :,,$(subst \,/,/$(STAFF_HOME)))
  CFLAGS += -DAXIS2_SKIP_INT_TYPEDEFS
  CXXFLAGS += -DAXIS2_SKIP_INT_TYPEDEFS
else
  LIBPREFIX = lib
  LIBEXT = .so
  LIBVEREXT = $(LIBEXT)$(DVERSION)
  LIBVERMEXT = $(LIBEXT)$(DVERSIONM)
  LDLIB = -shared -Wl,-soname,
  LIBRARY_PATH_ENV = LD_LIBRARY_PATH
endif
endif

ifeq ($(LINUX_RELEASE),MCBC)
APXS := $(shell which /www/bin/apxs 2>/dev/null)
else
APXS := $(shell which apxs apxs2 2>/dev/null)
ifneq ($(APXS),)
APXSREAL := $(shell readlink $(APXS))
ifneq ($(APXSREAL),)
APXS := $(APXSREAL)
endif
endif
endif

ifeq ($(AXIS2C_HOME),)
AXIS2C_INCDIR := $(shell pkg-config --cflags-only-I axis2c | sed 's;^-I;;;s;/$$;;')
AXIS2C_LIBDIR := $(shell pkg-config --libs-only-L axis2c | sed 's;^-L;;;s;/$$;;')
ifneq ($(wildcard $(dir $(AXIS2C_LIBDIR))modules),)
AXIS2C_HOME := $(dir $(AXIS2C_LIBDIR))
endif
else
AXIS2C_INCDIR := $(shell ls -d $(AXIS2C_HOME)/include/axis2-* 2>/dev/null | head -1)
AXIS2C_LIBDIR = $(AXIS2C_HOME)/lib
endif


INSTALLINCDIR = $(STAFF_HOME)/include/
INSTALLLIBDIR = $(STAFF_HOME)/lib/

DEPLOYDIR = $(TOPDIR)deploy/$(PLATFORM)/
DEPLOYINCDIR = $(DEPLOYDIR)$(INSTALLINCDIR)
DEPLOYLIBDIR = $(DEPLOYDIR)$(INSTALLLIBDIR)

MAKEFILE_ENV_INCLUDED = 1

endif

.EXPORT_ALL_VARIABLES:

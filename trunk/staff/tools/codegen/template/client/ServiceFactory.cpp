// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// DO NOT EDIT

#include <memory>
#include <staff/common/IService.h>
#foreach $(Project.Interfaces)
#include "$(Interface.Name)Proxy.h"
#end
#include "ServiceFactory.h"

namespace staff
{
  IService* CServiceFactory::AllocateClient(const std::string& sClientType,
                                                   const std::string& sServiceUri,
                                                   const std::string& sSessionId,
                                                   const std::string& sInstanceId)
  {
#foreach $(Project.Interfaces)
#foreach $(Interface.Classes)
    if (sClientType == typeid($(Class.NsName)).name())
    {
      std::auto_ptr< $(Class.NsName)Proxy > pClientProxy(new $(Class.NsName)Proxy);
      pClientProxy->Init(sServiceUri, sSessionId, sInstanceId);
      return pClientProxy.release();
    }
#end
#end
    return NULL;
  }

  CServiceFactory& CServiceFactory::Inst()
  {
    if (m_pInst == NULL)
    {
      m_pInst = new CServiceFactory;
    }

    return *m_pInst;
  }

  CServiceFactory::CServiceFactory()
  {
  }

  CServiceFactory* CServiceFactory::m_pInst = NULL;
}

/*
 *  Copyright 2009 Utkin Dmitry
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
/* 
 *  This file is part of the WSF Staff project.
 *  Please, visit http://code.google.com/p/staff for more information.
 */

// This file generated by staff_codegen
// DO NOT EDIT

#include <memory>
#foreach $(Project.Interfaces)
#include "$(Interface.Name)Proxy.h"
#end
#include "ServiceFactory.h"

void* CServiceFactory::AllocateClient(const std::string& sClientType, const std::string& sServiceUri, const std::string& sSessionId)
{
#foreach $(Project.Interfaces)
#foreach $(Interface.Classes)
  if (sClientType == typeid($(Class.NsName)).name())
  {
    std::auto_ptr< $(Class.NsName)Proxy > pClientProxy(new $(Class.NsName)Proxy);
    pClientProxy->Init(sServiceUri.size() != 0 ? sServiceUri : \
#ifeq($(Class.ServiceUri),)
"http://localhost:9090/axis2/services/$(Class.ServiceNsName)"\
#else
"$(Class.ServiceUri)"\
#ifeqend
, sSessionId);
    return pClientProxy.release();
  } else
#end
#end
  return NULL;
}

CServiceFactory& CServiceFactory::Inst()
{
  if (m_pInst == NULL)
  {
    m_pInst = new CServiceFactory;
  }

  return *m_pInst;
}

CServiceFactory::CServiceFactory()
{
}

CServiceFactory* CServiceFactory::m_pInst = NULL;

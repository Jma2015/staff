# This file generated by staff_codegen
# For more information please visit: http://code.google.com/p/staff/

INTERFACES :=\
#foreach $(Project.Interfaces)
 $(Interface.Name).h\
#end

TARGET := $(Project.Interfaces.Interface.NsName.!mangle)_client


PLATFORM ?= \$(shell uname -m)
SRCDIR = $($SRCDIR)
OBJDIR = obj/\$(PLATFORM)/
OUTDIR = out/\$(PLATFORM)/

ifneq (\$(DEBUG),)
  CXXFLAGS += -D_DEBUG -g -O0
  LDFLAGS += -g -O0
endif

CXXFLAGS += -I\$(STAFF_HOME)/include/
LDFLAGS += -L\$(STAFF_HOME)/lib -lstaffutils -lstaffcommon -lstaffclient -lrise

CODEGEN_INTERFACES := \$(patsubst %.h,\$(SRCDIR)%.h,\$(INTERFACES))
CODEGEN_HEADERS := \$(patsubst %.h,%Proxy.h,\$(CODEGEN_INTERFACES))
CODEGEN_SOURCES := \$(patsubst %.h,%Proxy.cpp,\$(CODEGEN_INTERFACES))
CODEGEN_FILES := \$(CODEGEN_HEADERS) \$(CODEGEN_SOURCES)

NON_CODEGEN_SOURCES := \$(filter-out \$(CODEGEN_SOURCES),\$(wildcard \$(SRCDIR)*.cpp))
SOURCES := \$(CODEGEN_SOURCES) \$(NON_CODEGEN_SOURCES)
OBJECTS := \$(patsubst \$(SRCDIR)%.cpp,\$(OBJDIR)%.o,\$(SOURCES))

.NOTPARALLEL: \$(CODEGEN_FILES)

# == make ===========================================
make: check "\$(OBJDIR)" "\$(OUTDIR)" \$(OUTDIR)\$(TARGET)

# link
\$(OUTDIR)\$(TARGET): \$(OBJECTS)
	\$(CXX) \$(OBJECTS) -o \$(OUTDIR)\$(TARGET) \$(LDFLAGS)

# compile
\$(OBJDIR)%.o: \$(SRCDIR)%.cpp
	\$(CXX) \$(CXXFLAGS) -c $< -o $@

\$(NON_CODEGEN_SOURCES): \$(CODEGEN_SOURCES)

\$(SRCDIR)%Proxy.h \$(SRCDIR)%Proxy.cpp:: \$(SRCDIR)%.h
	\$(STAFF_HOME)/bin/staff_codegen -u -tclient -c\$(SRCDIR) \$(INTERFACES)

# == clean ==========================================
clean:
	rm -f \$(OUTDIR)\$(TARGET) \$(OBJECTS) \$(CODEGEN_FILES)
	test ! -d \$(OBJDIR) || rmdir -p \$(OBJDIR)
	test ! -d \$(OUTDIR) || rmdir -p \$(OUTDIR)

# == mkdir ==========================================
"%/":
	@[ -z "$@" -o -d "$@" ] || mkdir -p $@ && chmod g+w $@

check:
ifeq (\$(STAFF_HOME),)
	@\$(ECHO) "\033[31;1mERROR: STAFF_HOME is not set\033[0m"; false
endif

// This file generated by staff_codegen
// Client skeleton

#include <stdio.h>
#include <iostream>
#include <rise/threading/SharedPtr.h>
#include <rise/string/String.h>
#include <rise/common/Log.h>
#include <rise/common/ExceptionTemplate.h>
#include <rise/common/console.h>
#include <staff/common/Exception.h>
#include "ServiceFactory.h"
#foreach $(Project.Interfaces)
#include "$(Interface.Name).h"
#end

int main(int nArgs, const char* paszArgs[])
{
#foreach $(Project.Interfaces)
  try
  {
#foreach $(Interface.Classes)
    {
#ifneq("$(Interface.Namespace)","")
#var sNamespace $(Interface.Namespace)::
#var sNamespacePrefix $(Interface.Namespace).
#else
#var sNamespace 
#var sNamespacePrefix 
#ifeqend
      rise::CSharedPtr<$($sNamespace)$(Class.Name)> p$(Class.ServiceName) = 
        CServiceFactory::Inst().GetService<$($sNamespace)$(Class.Name)>();

      RISE_ASSERTES(p$(Class.ServiceName) != NULL, rise::CLogicNoItemException, "Cannot get client for service $(Class.ServiceName)!");

      // Invoke Your service here:
#foreach $(Class.Members)
      // p$(Class.ServiceName)->$(Member.Name)(\
#foreach $(Member.Params)
#ifeq($(Param.$Num),0)
\
#else
, \
#ifeqend
$(Param.Name)\
#end
);
#end
    }
#end
  }
  catch(const staff::CRemoteException& rEx)
  {
    rise::LogError() << rEx.GetDescr();
  }
  RISE_CATCH_ALL
  
#end
  return 0;
}

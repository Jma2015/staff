// This file generated by staff_codegen
// DO NOT EDIT

#ifndef _$(Interface.Name)Context_h_
#define _$(Interface.Name)Context_h_

#include <rise/string/String.h>

#ifneq("$(Interface.Namespace)","")
namespace $(Interface.Namespace)
{
#ifeqend
#foreach $(Interface.Classes)
  class $(Class.Name)Impl;
  
  //!  контекст сервиса $(Class.Name)
  class $(Class.Name)Context
  {
  public:
    //!
    static $(Class.Name)Context& GetContext();

    //!         получить указатель на реализацию сервиса(только для локальных сервисов)
    /*! \param  sID - идентификатор сервиса в группе
        \return указатель на реализацию сервиса
        */
    $(Class.Name)Impl* GetServiceImpl(const rise::CString& sID);

    //!         получить идентификатор сервиса в группе по реализации
    /*! \param  pImpl - реализация
        \return идентификатор сервиса группы
        */
    const rise::CString& GetServiceID(const $(Class.Name)Impl* pImpl) const;

  protected:
    //!        защищенный конструктор
    $(Class.Name)Context();
    
    //!        защищенный деструктор
    ~$(Class.Name)Context();

  private:
    class $(Class.Name)ContextImpl;
    $(Class.Name)ContextImpl* m_pImpl;
    static $(Class.Name)Context* m_pInst;
  };
#end
#ifneq("$(Interface.Namespace)","")
}

#ifeqend
#endif // _$(Interface.Name)Context_h_

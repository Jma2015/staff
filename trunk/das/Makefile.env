# environment file for make

#set default target 'make', if not set
ifeq ($(MAKECMDGOALS),)
  MAKECMDGOALS = make
all: make
endif

ifeq ($(PLATFORM),)
  PLATFORM := $(shell uname -m)
endif

ifeq ($(TOPDIR),)
  TOPDIR = $(shell pwd | sed 's/$$/\//g' | sed 's/^\(.*\/staff\/das\/\).*/\1/g' | grep \/staff\/das\/)
endif

check:
ifeq ($(AXIS2C_HOME),)
	@echo "\033[31;1mERROR: AXIS2C_HOME is not set\033[0m"; false
else
ifeq ($(TOPDIR),)
	@echo "\033[31;1mERROR: Can't detect topdir! \nPlease, rename topdir to \"staff\" or make, using command: TOPDIR=<full path to staff> make\033[0m"; false
else
ifeq ($(STAFF_HOME),)
ifeq ($(MAKECMDGOALS),install)
	@echo "\033[31;1mERROR: STAFF_HOME is not set\033[0m"; false
endif
endif
endif
endif

SRCDIR = src/
OBJDIR = obj/$(PLATFORM)/
OUTDIR = out/$(PLATFORM)/

INCDIR = include/staff/das/$(TARGET)/
BINDIR = bin/
LIBDIR = lib/
COMDIR = components/
SAMPLESDIR = samples/

STAFF_DEPLOY_HOME := $(TOPDIR)../staff/deploy/$(PLATFORM)/usr/local/staff

CXXFLAGS += -I$(AXIS2C_INCDIR) -I$(TOPDIR)../rise/deploy/$(PLATFORM)/usr/include -I$(STAFF_DEPLOY_HOME)/include/ -fPIC -fexceptions -D_REENTRANT -Wall
LDFLAGS += -L$(AXIS2C_LIBDIR) -L$(TOPDIR)../rise/deploy/$(PLATFORM)/usr/lib -L$(STAFF_DEPLOY_HOME)/lib -fPIC -fexceptions -Wl,-rpath,$(AXIS2C_LIBDIR)

CXXFLAGS += -I$(DEPLOYDIR)include
LDFLAGS += -L$(DEPLOYDIR)lib

ifeq ($(PLATFORM),x86_64)
  CXXFLAGS += -D_M_X64
  CFLAGS += -D_M_X64
endif

ifneq ($(DEBUG),)
  CXXFLAGS += -D_DEBUG -g -O0
  LDFLAGS += -g -O0
endif

LDAXIS2LIBS = -laxis2_parser -lneethi -laxis2_http_common

VPATH = $(SRCDIR)

AXIS2C_INCDIR = $(shell ls -d $(AXIS2C_HOME)/include/axis2-* | head -1)
AXIS2C_LIBDIR = $(AXIS2C_HOME)/lib/

DEPLOYROOTDIR = $(TOPDIR)deploy/$(PLATFORM)/
DEPLOYDIR = $(DEPLOYROOTDIR)usr/local/staff/
INSTALLDIR = $(STAFF_HOME)/


STAFF_CODEGEN = STAFF_HOME=$(STAFF_DEPLOY_HOME) LD_LIBRARY_PATH=$(TOPDIR)../rise/deploy/$(PLATFORM)/usr/lib $(STAFF_DEPLOY_HOME)/bin/staff_codegen

ifneq ($(shell grep -c vniins /proc/version),0)
  OS = MCBC
else
ifneq ($(shell grep -c ubuntu /proc/version),0)
  OS = UBUNTU
else
  OS = UNKNOWN
endif
endif

CXXFLAGS += -DOS_$(OS)
CFLAGS += -DOS_$(OS)

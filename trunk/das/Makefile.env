# environment file for make

#set default target 'make', if not set
ifeq ($(MAKECMDGOALS),)
  MAKECMDGOALS = make
all: make
endif

TOPDIR ?= $(shell pwd | sed 's/$$/\//g' | sed 's/^\(.*\/das\/\).*/\1/g' | grep \/das\/)

include $(TOPDIR)/../Makefile.env

check:
ifeq ($(TOPDIR),)
	@echo "\033[31;1mERROR: Can't detect topdir! \nPlease, rename topdir to \"staff\" or make, using command: TOPDIR=<full path to staff> make\033[0m"; false
else
ifeq ($(STAFF_HOME),)
ifeq ($(MAKECMDGOALS),install)
	@echo "\033[31;1mERROR: STAFF_HOME is not set\033[0m"; false
endif
endif
endif

INCDIR = include/staff/das/$(TARGET)/
COMDIR = components/
SAMPLESDIR = samples/

STAFF_DEPLOY_HOME := $(TOPDIR)../staff/deploy/$(PLATFORM)/usr/local/staff

CXXFLAGS += -I$(TOPDIR)../rise/deploy/$(PLATFORM)/usr/include -I$(STAFF_DEPLOY_HOME)/include -fexceptions -D_REENTRANT -Wall
LDFLAGS += -L$(TOPDIR)../rise/deploy/$(PLATFORM)/usr/lib -L$(STAFF_DEPLOY_HOME)/lib -fexceptions

ifneq ($(OS),MINGW)
CXXFLAGS += -fPIC
LDFLAGS += -fPIC
endif

CXXFLAGS += -I$(DEPLOYDIR)include
LDFLAGS += -L$(DEPLOYDIR)lib

VPATH = $(SRCDIR)

DEPLOYROOTDIR = $(TOPDIR)deploy/$(PLATFORM)/
DEPLOYDIR = $(DEPLOYROOTDIR)usr/local/staff/
INSTALLDIR = $(STAFF_HOME)/

STAFF_CODEGEN = STAFF_HOME=$(STAFF_DEPLOY_HOME) $(LIBRARY_PATH_ENV)=$$$(LIBRARY_PATH_ENV):$(TOPDIR)../rise/deploy/$(PLATFORM)/usr/lib:$(TOPDIR)../staff/deploy/$(PLATFORM)/usr/local/staff/lib $(STAFF_DEPLOY_HOME)/bin/staff_codegen


// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/

#ifndef _STAFF_SAMPLES_DAS_SERVICES_ACCOUNTS_H_
#define _STAFF_SAMPLES_DAS_SERVICES_ACCOUNTS_H_

#include <list>
#include <staff/common/IService.h>

namespace staff
{
namespace samples
{
namespace das
{
namespace services
{

  //! Role info
  struct Role
  {
    int nId;  //!< Role id
    std::string sName;  //!< Role name
    std::string sDescr;  //!< Role description
  };

  typedef std::list<Role> RolesList;  //!< Roles list


  struct UserToAdd
  {
    std::string sName;
    std::string sPassword;
    std::string sDescr;
  };

  typedef std::list<UserToAdd> UserToAddList;

  typedef std::list<int> IntList;


  //! Accounts service
  class Accounts: public staff::IService
  {
  public:
    //! get groups list
    virtual RolesList GetGroups() = 0;

    //! get users list
    virtual RolesList GetUsers() = 0;

    //! get group by id
    virtual Role GetGroupById(int nId) = 0;

    //! add user, returns added user id
    virtual int AddUser(const std::string& sName, const std::string& sPassword, const std::string& sDescr) = 0;

    //! add users, returns added user id list
    virtual IntList AddUsers(const UserToAddList& lsUsers) = 0;

    //! remove user by id
    virtual void RemoveUser(int nId) = 0;

    //! remove user by name
    virtual void RemoveUserByName(const std::string& sName) = 0;

    //! get user id by name
    virtual int GetUserIdByName(const std::string& sName) = 0;

    //! get user id by name
    virtual Role GetUser(int nId) = 0;
  };

}
}
}
}

#endif // _STAFF_SAMPLES_DAS_SERVICES_ACCOUNTS_H_


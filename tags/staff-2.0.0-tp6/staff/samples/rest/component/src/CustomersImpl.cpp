// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Service Implementation

#include <rise/common/exmacros.h>
#include <staff/common/Exception.h>
#include "CustomersImpl.h"

namespace samples
{
namespace rest
{

CustomersImpl::CustomersImpl():
  m_nLastId(0)
{
}

CustomersImpl::~CustomersImpl()
{
}

int CustomersImpl::Add(const std::string& sFirstName, const std::string& sLastName, int nYear)
{
  Customer stCustomer;
  stCustomer.nId = ++m_nLastId;
  stCustomer.sFirstName = sFirstName;
  stCustomer.sLastName = sLastName;
  stCustomer.nYear = nYear;

  m_lsCustomers.push_back(stCustomer);
  return stCustomer.nId;
}

void CustomersImpl::Delete(int nId)
{
  for (CustomersList::iterator itCustomer = m_lsCustomers.begin();
      itCustomer != m_lsCustomers.end(); ++itCustomer)
  {
    if (itCustomer->nId == nId)
    {
      m_lsCustomers.erase(itCustomer);
      return;
    }
  }

  RISE_THROWS(staff::RemoteException, "Customer with given id does not exists");
}

void CustomersImpl::Update(int nId, const std::string& sFirstName, const std::string& sLastName, int nYear)
{
  for (CustomersList::iterator itCustomer = m_lsCustomers.begin();
      itCustomer != m_lsCustomers.end(); ++itCustomer)
  {
    if (itCustomer->nId == nId)
    {
      itCustomer->sFirstName = sFirstName;
      itCustomer->sLastName = sLastName;
      itCustomer->nYear = nYear;
      return;
    }
  }

  RISE_THROWS(staff::RemoteException, "Customer with given id does not exists");
}

CustomersList CustomersImpl::List()
{
  return m_lsCustomers;
}

Customer CustomersImpl::Get(int nId)
{
  for (CustomersList::iterator itCustomer = m_lsCustomers.begin();
      itCustomer != m_lsCustomers.end(); ++itCustomer)
  {
    if (itCustomer->nId == nId)
    {
      return *itCustomer;
    }
  }

  RISE_THROWS(staff::RemoteException, "Customer with given id does not exists");
}


}
}


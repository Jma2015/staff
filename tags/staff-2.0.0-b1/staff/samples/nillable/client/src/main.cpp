// This file generated by staff_codegen
// For more information please visit: http://code.google.com/p/staff/
// Client skeleton

#include <memory>
#include <staff/utils/Log.h>
#include <staff/common/Exception.h>
#include <staff/client/ServiceFactory.h>
#include "NillableService.h"

template <typename Type>
std::ostream& operator<<(std::ostream& rStream, const staff::Nillable<Type>& rOpt)
{
  if (rOpt.IsNull())
  {
    rStream << "(nil)";
  }
  else
  {
    rStream << *rOpt;
  }
  return rStream;
}

std::ostream& operator<<(std::ostream& rStream, const ::samples::nillable::Info& rInfo)
{
  return rStream << "int = " << rInfo.tNillableInt << "; str = " << rInfo.tNillableStr;
}


int main(int /*nArgs*/, const char* /*paszArgs*/[])
{
  try
  {
    std::auto_ptr< ::samples::nillable::NillableService > pNillableService(::staff::ServiceFactory::Inst().GetService< ::samples::nillable::NillableService >());

    STAFF_ASSERT(pNillableService.get(), "Cannot get client for service samples.nillable.NillableService!");

    // Invoke Your service here:

    ::samples::nillable::Info tInfo;
    pNillableService->Set(tInfo);
    staff::LogInfo() << "Set called";

    ::samples::nillable::Info tGetResult = pNillableService->Get();
    staff::LogInfo() << "Get result: " << tGetResult;


    tInfo.tNillableInt = 10;
    tInfo.tNillableStr = "test";
    pNillableService->Set(tInfo);
    staff::LogInfo() << "Set called";

    tGetResult = pNillableService->Get();
    staff::LogInfo() << "Get result: " << tGetResult;


    tInfo.tNillableInt.Reset();
    pNillableService->SetNillableStruct(tInfo);
    staff::LogInfo() << "SetNillableStruct(NULL) called";

    staff::Nillable< ::samples::nillable::Info > tGetNillableStructResult = pNillableService->GetNillableStruct();
    staff::LogInfo() << "GetNillableStruct result: " << tGetNillableStructResult;


    pNillableService->SetNillableStruct(::samples::nillable::Info());
    staff::LogInfo() << "SetNillableStruct(NULL) called";

    tGetNillableStructResult = pNillableService->GetNillableStruct();
    staff::LogInfo() << "GetNillableStruct result: " << tGetNillableStructResult;



    pNillableService->SetNillableInt(10);
    staff::LogInfo() << "SetNillableInt called";

    staff::Nillable<int> tGetNillableIntResult = pNillableService->GetNillableInt();
    staff::LogInfo() << "GetNillableInt result: " << tGetNillableIntResult;

    pNillableService->SetNillableInt(staff::Nillable<int>());
    staff::LogInfo() << "SetNillableInt called";

    tGetNillableIntResult = pNillableService->GetNillableInt();
    staff::LogInfo() << "GetNillableInt result: " << tGetNillableIntResult;

  }
  STAFF_CATCH_ALL

  return 0;
}


/*
 *  Copyright 2009 Utkin Dmitry
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
/* 
 *  This file is part of the WSF Staff project.
 *  Please, visit http://code.google.com/p/staff for more information.
 */

// This file generated by staff_codegen
// Service Stub

#include <rise/common/ExceptionTemplate.h>
#include <rise/common/Log.h>
#include <rise/string/String.h>
#include <staff/service/ServiceDispatcherClient.h>
#foreach $(Project.Interfaces)
#include "$(Interface.Name)Wrapper.h"
#end

int main(int nArgs, const char* paszArgs[])
{
#foreach $(Project.Interfaces)
  try
  {
    rise::CString sSessionId;
    rise::CString sTmp;
    for(int i = 1; i < nArgs; ++i)
    {
      if(paszArgs[i] != NULL)
      {
        sTmp = paszArgs[i];
        if(sTmp.substr(0, 2) == _T("-s"))
          sSessionId = sTmp.substr(2);
      }
    }
#foreach $(Interface.Classes)
    {
      $(Class.NsName)Wrapper t$(Class.ServiceName)Wrapper;

      t$(Class.ServiceName)Wrapper.SetSessionId(sSessionId);
      staff::CServiceDispatcherClient::ServiceDispatcherClient().SetWrapper(t$(Class.ServiceName)Wrapper);
      staff::CServiceDispatcherClient::ServiceDispatcherClient().Start();
    }
#end
  }
  RISE_CATCH_ALL
#end

  return 0;
}
